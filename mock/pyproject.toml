[tool.poetry]
name = "ai-legal-assistant"
version = "0.1.0"
description = "AI Legal Assistant with document upload and chat"
authors = ["Interview Candidate <candidate@example.com>"]
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"
openai = "^1.3.0"
pydantic = "^2.5.0"
python-dotenv = "^1.0.0"
PyPDF2 = "^3.0.1"
python-docx = "^1.1.0"
pydantic-settings = "^2.10.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-watch = "^4.2.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
pytest-cov = "^4.1.0"

# Note: Poetry scripts will be properly configured in Task 6.2
# For now, use: poetry run uvicorn backend.app.main:app --reload

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_optional = true
no_implicit_reexport = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
